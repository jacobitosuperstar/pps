version: "3"

networks:
  server_network:

services:
  # Database
  database:
    image: postgres
    env_file:
      - ./pps.env
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-postgress}
      - POSTGRES_USER=${POSTGRES_USER:-postgress}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgress}
    expose:
      - "5432"
    ports:
      - "5432:5432"
    networks:
      - server_network
  # Banckend
  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    expose:
      - "8000"
    ports:
      - "8000:8000"
    volumes:
      - ./backend/:/app/
    env_file:
      - ./pps.env
    environment:
      - DEBUG=${DEBUG:-true}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-}
      - SERVER_HOSTNAME=${SERVER_HOSTNAME:-database}
      - POSTGRES_DB=${POSTGRES_DB:-postgress}
      - POSTGRES_USER=${POSTGRES_USER:-postgress}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgress}
    command: >
      sh -c "
      python manage.py makemigrations &&
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000
      "
    # gunicorn -c gunicorn_config.py server.wsgi:application --timeout 10800
    depends_on:
      - database
    networks:
      - server_network
  # Frontend App
  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    ports:
      - "5173:5173"
    expose:
      - "5173"
    networks:
      - server_network
    volumes:
      - ./frontend/:/app/
    depends_on:
      - database
      - backend
